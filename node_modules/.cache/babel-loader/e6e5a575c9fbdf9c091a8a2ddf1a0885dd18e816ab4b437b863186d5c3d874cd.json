{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sp781\\\\Documents\\\\qr-generator\\\\src\\\\components\\\\QRCodeGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Container, Form, Button, Row, Col, Spinner } from 'react-bootstrap';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRCodeGenerator = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [qrImageUrl, setQrImageUrl] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleGenerate = async e => {\n    e.preventDefault();\n    if (!text.trim()) return;\n    setLoading(true);\n    setQrImageUrl(null);\n    try {\n      const res = await fetch('http://localhost:5000/api/generate-qr', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text\n        })\n      });\n      const blob = await res.blob();\n      const imageUrl = URL.createObjectURL(blob);\n      setQrImageUrl(imageUrl);\n    } catch (err) {\n      alert('Error generando el QR desde el backend.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDownload = () => {\n    if (!qrImageUrl) return;\n    const link = document.createElement('a');\n    link.href = qrImageUrl;\n    link.download = 'codigo_qr.png';\n    link.click();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-4 shadow-lg rounded bg-light\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-center mb-4\",\n            children: \"\\uD83C\\uDFAF Generador de C\\xF3digo QR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleGenerate,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Introduce un texto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Ej. https://tusitio.com\",\n                value: text,\n                onChange: e => setText(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              className: \"mt-3 w-100\",\n              children: \"Generar QR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(Spinner, {\n              animation: \"border\",\n              role: \"status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Generando...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), qrImageUrl && /*#__PURE__*/_jsxDEV(motion.div, {\n            className: \"text-center mt-4\",\n            initial: {\n              opacity: 0,\n              scale: 0.8\n            },\n            animate: {\n              opacity: 1,\n              scale: 1\n            },\n            transition: {\n              duration: 0.5\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: qrImageUrl,\n              alt: \"C\\xF3digo QR\",\n              width: 256\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              className: \"mt-3\",\n              onClick: handleDownload,\n              children: \"Descargar QR\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(QRCodeGenerator, \"vnezgJo30g11tN5skkealWrDfNI=\");\n_c = QRCodeGenerator;\nexport default QRCodeGenerator;\nvar _c;\n$RefreshReg$(_c, \"QRCodeGenerator\");","map":{"version":3,"names":["React","useState","useRef","Container","Form","Button","Row","Col","Spinner","motion","jsxDEV","_jsxDEV","QRCodeGenerator","_s","text","setText","qrImageUrl","setQrImageUrl","loading","setLoading","handleGenerate","e","preventDefault","trim","res","fetch","method","headers","body","JSON","stringify","blob","imageUrl","URL","createObjectURL","err","alert","handleDownload","link","document","createElement","href","download","click","className","children","md","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","Label","Control","type","placeholder","value","onChange","target","required","variant","animation","role","div","initial","opacity","scale","animate","transition","duration","src","alt","width","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Sp781/Documents/qr-generator/src/components/QRCodeGenerator.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { Container, Form, Button, Row, Col, Spinner } from 'react-bootstrap';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst QRCodeGenerator = () => {\r\n  const [text, setText] = useState('');\r\n  const [qrImageUrl, setQrImageUrl] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleGenerate = async (e) => {\r\n    e.preventDefault();\r\n    if (!text.trim()) return;\r\n\r\n    setLoading(true);\r\n    setQrImageUrl(null);\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/generate-qr', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ text }),\r\n      });\r\n\r\n      const blob = await res.blob();\r\n      const imageUrl = URL.createObjectURL(blob);\r\n      setQrImageUrl(imageUrl);\r\n    } catch (err) {\r\n      alert('Error generando el QR desde el backend.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    if (!qrImageUrl) return;\r\n    const link = document.createElement('a');\r\n    link.href = qrImageUrl;\r\n    link.download = 'codigo_qr.png';\r\n    link.click();\r\n  };\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={6}>\r\n          <div className=\"p-4 shadow-lg rounded bg-light\">\r\n            <h2 className=\"text-center mb-4\">ðŸŽ¯ Generador de CÃ³digo QR</h2>\r\n            <Form onSubmit={handleGenerate}>\r\n              <Form.Group>\r\n                <Form.Label>Introduce un texto</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Ej. https://tusitio.com\"\r\n                  value={text}\r\n                  onChange={(e) => setText(e.target.value)}\r\n                  required\r\n                />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\" className=\"mt-3 w-100\">\r\n                Generar QR\r\n              </Button>\r\n            </Form>\r\n\r\n            {loading && (\r\n              <div className=\"text-center mt-4\">\r\n                <Spinner animation=\"border\" role=\"status\" />\r\n                <p>Generando...</p>\r\n              </div>\r\n            )}\r\n\r\n            {qrImageUrl && (\r\n              <motion.div\r\n                className=\"text-center mt-4\"\r\n                initial={{ opacity: 0, scale: 0.8 }}\r\n                animate={{ opacity: 1, scale: 1 }}\r\n                transition={{ duration: 0.5 }}\r\n              >\r\n                <img src={qrImageUrl} alt=\"CÃ³digo QR\" width={256} />\r\n                <Button\r\n                  variant=\"success\"\r\n                  className=\"mt-3\"\r\n                  onClick={handleDownload}\r\n                >\r\n                  Descargar QR\r\n                </Button>\r\n              </motion.div>\r\n            )}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default QRCodeGenerator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}